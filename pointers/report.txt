1)basics_of_pointers

#include <stdio.h>

int main()
{
    int a = 1;

    int* b = &a;

    printf("Address via a: %p \nAddress via b: %p \n", &a, b);

    *b = 4;
    
    printf("Value via a: %d \nValue via b: %d \n", a, *b);

    return 0;
}

2)pointer_arithmetic

#include <stdio.h>

int main() {
    int arr[5] = {10, 20, 30, 40, 50};

    int *ptr = arr;
    
    for (int i = 0; i < 5; i++) {
        printf("Element at index %d: %d\n", i, *(ptr + i));
    }

    for (int i = 0; i < 5; i++) {
        *(ptr + i) = (i + 1) * 100;
    }
    
    for (int i = 0; i < 5; i++) {
        printf("Element at index %d: %d\n", i, *(ptr + i));
    }
    
    for (int i = 0; i < 5; i++) {
        printf("Element at index %d: %d\n", i, arr[i]);
    }

    return 0;
}

3)pointers_and_functions

#include <stdio.h>

int swap(int* a, int* b){
    int c = *a;
    *a = *b;
    *b = c;
}

int main(){
    int a = 1;
    int b = 2;
    printf("Value of a before: %d\nValue of b before: %d", a, b);

    swap(&a, &b);

    printf("Value of a after: %d\nValue of b after: %d", a, b);

    return 0;
}

4)pointers_to_pointers

#include <stdio.h>

int main() {
    int a = 1;

    int* ptra = &a;

    int** ptrptra = &ptra;

    printf("Value of a using ptra: %d\nValue of a using ptrptra: %d", *ptra, **ptrptra);
    
    return 0;
}

5)strings_and_character_pointers

#include <stdio.h>

int main() {
    char str[] = "Hello";
    
    char *ptr = str;
    
    while (*ptr != '\0') {
        printf("%c\n", *ptr);
        ptr++;
    }
    
    ptr = str;

    int count = 0;
    while (*ptr != '\0') {
        count++;
        ptr++;
    }

    printf("Number of characters: %d\n", count);

    return 0;
}
